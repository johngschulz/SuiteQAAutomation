## run deploy.yml to bring up instances
## run this script to run tests
- hosts: tag_type_hub
  gather_facts: false
  tasks:
  - name: wait for hub machine to be up
    local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=5 timeout=300

- hosts: tag_type_win10
  gather_facts: false
  tasks:
  - name: wait for node machine to be up
    local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=5 timeout=450

- hosts: tag_type_hub
  gather_facts: false
  remote_user: ec2-user
  sudo: yes
  tasks:
  - name: start selenium hub
    docker:
      docker_api_version: 1.21
      name: selenium-hub
      image: selenium/hub:2.52.0
      ports: 4444:4444
      state: started

- hosts: tag_type_hub
  gather_facts: false
  remote_user: ec2-user
  sudo: no
  pre_tasks:
  - name: get nginx private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA nginx
        instance-state-name: running
    register: nginx_facts
  - name: get Win10 private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Win10 Node
        instance-state-name: running
    register: win10_facts
  - name: get ubuntu_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name":  QA Ubuntu gs
        instance-state-name: running
    register: ubuntu_gs_facts
  - name: get centos_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name":  QA centos gs
        instance-state-name: running
    register: centos_gs_facts
  - name: get win2012_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name":  QA Win2012
        instance-state-name: running
    register: win2012_gs_facts
  - name: get rhel_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name":  QA RHEL gs
        instance-state-name: running
    register: rhel_gs_facts
  vars:
    nginx_ip: "{{ nginx_facts.instances[0].private_ip_address }}"
    win10_ip: "{{ hostvars[inventory_hostname]['ec2_private_ip_address'] }}"
    ubuntu_gs_ip: "{{ ubuntu_gs_facts.instances[0].private_ip_address }}"
    centos_gs_ip: "{{ centos_gs_facts.instances[0].private_ip_address }}"
    rhel_gs_ip: "{{ rhel_gs_facts.instances[0].private_ip_address }}"
    win2012_gs_ip: "{{ win2012_gs_facts.instances[0].private_ip_address }}"
  roles:
    - run_tests





