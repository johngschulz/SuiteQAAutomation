### !!!ENSURE --tag_type_targetinstance is used when running this play or all machines will be terminated!!!! ####
- hosts: tag_type_win2012
  remote_user: Administrator
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: windows_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate windows_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

- hosts: tag_type_win10
  remote_user: Administrator
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: windows_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate windows_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

- hosts: tag_type_hub
  gather_facts: True
  remote_user: ec2-user
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: linux_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate linux_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

- hosts: tag_type_ubuntu_gs
  gather_facts: True
  remote_user: ubuntu
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: linux_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate linux_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

- hosts: tag_type_centos_gs
  gather_facts: True
  remote_user: centos
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: linux_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate linux_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

#remove linux_boxes except NAT 
- hosts: tag_type_hub
  gather_facts: True
  remote_user: ec2-user
  vars:
    - region: 'us-east-1'
  tasks:
    - name: gather ec2-facts
      action: ec2_facts
      register: linux_facts
    - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

    - name: terminate linux_boxes
      local_action:
        module: ec2
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ansible_ec2_instance_id }}"

- hosts: test_runners
  gather_facts: false
  tasks:
  - name: stop all instances except NAT and nginx
    local_action:
      module: ec2
      state: 'absent'
      region: us-east-1
      instance_ids: "{{ hostvars[inventory_hostname]['ec2_id'] }}"

# #remove NAT 
# - hosts: tag_type_nat
#   gather_facts: True
#   remote_user: ec2-user
#   vars:
#     - region: 'us-east-1'
#   tasks:
#     - name: gather ec2-facts
#       action: ec2_facts
#       register: linux_facts
#     - debug: msg="{{ hostvars[inventory_hostname]['ec2_id'] }}"

#     - name: terminate nat
#       local_action:
#         module: ec2
#         state: 'absent'
#         region: us-east-1
#         instance_ids: "{{ ansible_ec2_instance_id }}"
