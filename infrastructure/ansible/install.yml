- name: Set NAT public IP in ssh.cfg
  hosts: tag_type_nat
  gather_facts: false
  vars:
    eip: "{{ hostvars[inventory_hostname]['ec2_ip_address'] }}"
  tasks:
  - name: update IP for gateway post-deploy
    local_action:
      module: lineinfile dest=~/SuiteQAAutomation/infrastructure/ansible/ssh.cfg regexp="ec2-user@" insertafter="ec2-user@" line="  ProxyCommand  ssh -W %h:%p ec2-user@{{ eip }}"

- name: Setup ip forwarding on NAT
  hosts: tag_type_nat
  remote_user: ec2-user
  sudo: yes
  pre_tasks:
  - name: get nginx private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA nginx
        instance-state-name: running
    register: nginx_facts
  - name: get nginx private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Win10 Node
        instance-state-name: running
    register: win10_facts
  - name: get ubuntu_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Ubuntu gs
        instance-state-name: running
    register: ubuntu_gs_facts
  vars:
    nat_ip: "{{ hostvars[inventory_hostname]['ec2_private_ip_address'] }}"
    nginx_ip: "{{ nginx_facts.instances[0].private_ip_address }}"
    win10_ip: "{{ win10_facts.instances[0].private_ip_address }}"
    ubuntu_gs_ip: "{{ ubuntu_gs_facts.instances[0].private_ip_address }}"
  roles:
    - nat

- name: Provision dependencies on hub instance
  hosts: tag_type_hub
  remote_user: ec2-user
  sudo: yes
  pre_tasks:
  - name: get nginx private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA nginx
        instance-state-name: running
    register: nginx_facts
  - name: get ubuntu_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Ubuntu gs
        instance-state-name: running
    register: ubuntu_gs_facts
  - name: get centos_gs private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA centos gs
        instance-state-name: running
    register: centos_gs_facts
  - name: get win2012 private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Win2012
        instance-state-name: running
    register: win2012_facts
  vars:
    ubuntu_gs_ip: "{{ ubuntu_gs_facts.instances[0].private_ip_address }}"
    centos_gs_ip: "{{ centos_gs_facts.instances[0].private_ip_address }}"
    win2012_ip: "{{ win2012_facts.instances[0].private_ip_address }}" 
    hub_ip: "{{ hostvars[inventory_hostname]['ec2_private_ip_address'] }}"
    nginx_ip: "{{ nginx_facts.instances[0].private_ip_address }}"
  roles:
    - hub

- name: provision nginx server
  hosts: tag_type_nginx
  remote_user: ubuntu
  sudo: yes
  pre_tasks:
  - name: get hub private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Grid Hub
        instance-state-name: running
    register: hub_facts
  vars:
    hub_ip: "{{ hub_facts.instances[0].private_ip_address }}"
  roles:
    - nginx

- name: provision win10 node
  hosts: tag_type_win10
  remote_user: Administrator
  pre_tasks:
  - name: wait for win10 machine to be up
    local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10 timeout=300
  - name: get hub private ip
    sudo: no
    local_action:
      module: ec2_remote_facts
      region: us-east-1
      filters:
        "tag:Name": QA Grid Hub
        instance-state-name: running
    register: hub_facts
  vars:
    hub_ip: "{{ hub_facts.instances[0].private_ip_address }}"
  roles:
    - win_node
  post_tasks:
  - name: restart win_node to activate autologon
    sudo: no
    command: shutdown /r
    async: 0
    poll: 0
    ignore_errors: true

- name: provision win2012 node
  gather_facts: true
  hosts: tag_type_win2012
  remote_user: Administrator
  pre_tasks:
  # - name: wait for win2012 machine to be up
  #   local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10 timeout=300
  roles:
    - win_2012

- name: provision ubuntu GS machine
  hosts: tag_type_ubuntu_gs
  remote_user: ubuntu
  sudo: yes
  roles:
    - ubuntu_gs

- name: provision centos GS machine
  hosts: tag_type_centos_gs
  remote_user: centos
  sudo: yes
  roles:
    - centos
