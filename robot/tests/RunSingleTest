function run_test()
{
       declare test_dir_name=$1
       declare browser_name=$2


        ssh -i /home/ec2-user/hub ubuntu@$NGINX_IP "mkdir -p /usr/share/nginx/html/$hostkeyword-$test_dir_name/$browser_name/"

        python updateJson.py data.json  $hostkeyword-$test_dir_name $browser_name inprogress
        scp -i /home/ec2-user/hub data.json ubuntu@$NGINX_IP:/usr/share/nginx/html/data.json
        robot  --variable SUT_IP:"$IP" --variable BROWSER:$browser_name --variable HOST:$hostkeyword  -L debug   -x xunit.xml -d reports/$hostkeyword/$test_dir_name demo_tests/$test_d
ir_name
        python updateJson.py data.json $hostkeyword-$test_dir_name $browser_name $?

        scp -i /home/ec2-user/hub -r reports/$hostkeyword/$test_dir_name/* ubuntu@$NGINX_IP:/usr/share/nginx/html/$hostkeyword-$test_dir_name/$browser_name
        scp -i /home/ec2-user/hub data.json ubuntu@$NGINX_IP:/usr/share/nginx/html/data.json
}


if [ "$#" -ne 5 ]; then
    echo " usage: RunSingleTest  <machine keyword> <machine IP> <test dir name> <browser> <ngnx ip>"
    exit 1
fi

declare hostkeyword=$1
declare IP=$2
declare test_dir_name=$3
declare browser_name=$4
declare NGINX_IP=$5


declare HOME=`pwd`

#setup ssh
if [ -z `ssh-keygen -F $NGINX_IP` ]; then
  touch ~ec2-user/.ssh/known_hosts ; ssh-keyscan -H $NGINX_IP >> ~ec2-user/.ssh/known_hosts
fi

#clean
rm -r reports/$hostkeyword

#get current test status file
rm  -f data.json
scp -i /home/ec2-user/hub ubuntu@$NGINX_IP:/usr/share/nginx/html/data.json     data.json

run_test $test_dir_name $browser_name
